//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Dislikes = newDislikesTable("public", "dislikes", "")

type dislikesTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnInteger
	UserID    postgres.ColumnInteger
	RatingID  postgres.ColumnInteger
	CreatedAt postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type DislikesTable struct {
	dislikesTable

	EXCLUDED dislikesTable
}

// AS creates new DislikesTable with assigned alias
func (a DislikesTable) AS(alias string) *DislikesTable {
	return newDislikesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DislikesTable with assigned schema name
func (a DislikesTable) FromSchema(schemaName string) *DislikesTable {
	return newDislikesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DislikesTable with assigned table prefix
func (a DislikesTable) WithPrefix(prefix string) *DislikesTable {
	return newDislikesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DislikesTable with assigned table suffix
func (a DislikesTable) WithSuffix(suffix string) *DislikesTable {
	return newDislikesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDislikesTable(schemaName, tableName, alias string) *DislikesTable {
	return &DislikesTable{
		dislikesTable: newDislikesTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newDislikesTableImpl("", "excluded", ""),
	}
}

func newDislikesTableImpl(schemaName, tableName, alias string) dislikesTable {
	var (
		IDColumn        = postgres.IntegerColumn("id")
		UserIDColumn    = postgres.IntegerColumn("user_id")
		RatingIDColumn  = postgres.IntegerColumn("rating_id")
		CreatedAtColumn = postgres.TimestampzColumn("created_at")
		allColumns      = postgres.ColumnList{IDColumn, UserIDColumn, RatingIDColumn, CreatedAtColumn}
		mutableColumns  = postgres.ColumnList{UserIDColumn, RatingIDColumn, CreatedAtColumn}
	)

	return dislikesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		UserID:    UserIDColumn,
		RatingID:  RatingIDColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
