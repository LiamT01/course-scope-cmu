//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type SemesterType string

const (
	SemesterType_Fall    SemesterType = "Fall"
	SemesterType_Spring  SemesterType = "Spring"
	SemesterType_Summer1 SemesterType = "Summer 1"
	SemesterType_Summer2 SemesterType = "Summer 2"
	SemesterType_Winter  SemesterType = "Winter"
)

func (e *SemesterType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "Fall":
		*e = SemesterType_Fall
	case "Spring":
		*e = SemesterType_Spring
	case "Summer 1":
		*e = SemesterType_Summer1
	case "Summer 2":
		*e = SemesterType_Summer2
	case "Winter":
		*e = SemesterType_Winter
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for SemesterType enum")
	}

	return nil
}

func (e SemesterType) String() string {
	return string(e)
}
