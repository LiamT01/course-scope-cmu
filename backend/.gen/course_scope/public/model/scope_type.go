//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type ScopeType string

const (
	ScopeType_Act  ScopeType = "ACT"
	ScopeType_Auth ScopeType = "AUTH"
	ScopeType_Pwd  ScopeType = "PWD"
)

func (e *ScopeType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "ACT":
		*e = ScopeType_Act
	case "AUTH":
		*e = ScopeType_Auth
	case "PWD":
		*e = ScopeType_Pwd
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for ScopeType enum")
	}

	return nil
}

func (e ScopeType) String() string {
	return string(e)
}
